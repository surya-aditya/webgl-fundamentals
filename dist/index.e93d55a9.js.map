{"mappings":"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","sources":["../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/runtime-browser-hmr/lib/runtime-67883cc1aa810ecf.js","webgl/src/scripts/index.ts","../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/transformer-js/src/esmodule-helpers.js","webgl/src/scripts/utils/webgl-utils.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"77e4cbc7e93d55a9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import webglUtils from \"./utils/webgl-utils.js\"\nimport vertexShaderSource from '../shaders/vertex.glsl'\nimport fragmentShaderSource from '../shaders/fragment.glsl'\n\nclass App {\n  private canvas: any\n  private program: any\n\n  constructor() {\n    this.canvas = document.getElementById('c')\n    this.canvas.getContext('webgl')\n\n    console.log(webglUtils);\n    if (!this.canvas) throw (\"Canvas not found\")\n\n    this.program = webglUtils.createProgram(this.canvas, [\"vertex-shader-2d\", \"fragment-shader-2d\"]);\n    this.canvas.useProgram(this.program);\n\n    \n  }\n\n}\n\nnew App()\n\n\n// function main() {\n//   // Get A WebGL context\n//   /** @type {HTMLCanvasElement} */\n//   var canvas = document.querySelector(\"#canvas\");\n//   var gl = canvas.getContext(\"webgl\");\n//   if (!gl) {\n//     return;\n//   }\n\n//   // setup GLSL program\n//   var program = webglUtils.createProgramFromScripts(gl, [\"vertex-shader-2d\", \"fragment-shader-2d\"]);\n//   gl.useProgram(program);\n\n//   // look up where the vertex data needs to go.\n//   var positionAttributeLocation = gl.getAttribLocation(program, \"a_position\");\n\n//   // lookup uniforms\n//   var colorLocation = gl.getUniformLocation(program, \"u_color\");\n//   var matrixLocation = gl.getUniformLocation(program, \"u_matrix\");\n\n//   // Create a buffer to put three 2d clip space points in\n//   var positionBuffer = gl.createBuffer();\n\n//   // Bind it to ARRAY_BUFFER (think of it as ARRAY_BUFFER = positionBuffer)\n//   gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n//   requestAnimationFrame(drawScene);\n\n//   // Draw the scene.\n//   function drawScene(now) {\n//     now *= 0.001;  // convert to seconds\n\n//     // Tell WebGL how to convert from clip space to pixels\n//     gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n//     // Clear the canvas.\n//     gl.clear(gl.COLOR_BUFFER_BIT);\n\n//     // Tell it to use our program (pair of shaders)\n//     gl.useProgram(program);\n\n//     // Turn on the attribute\n//     gl.enableVertexAttribArray(positionAttributeLocation);\n\n//     // Bind the position buffer.\n//     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n//     // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\n//     var size = 2;          // 2 components per iteration\n//     var type = gl.FLOAT;   // the data is 32bit floats\n//     var normalize = false; // don't normalize the data\n//     var stride = 0;        // 0 = move forward size * sizeof(type) each iteration to get the next position\n//     var offset = 0;        // start at the beginning of the buffer\n//     gl.vertexAttribPointer(\n//         positionAttributeLocation, size, type, normalize, stride, offset);\n\n//     // Set Geometry.\n//     var radius = Math.sqrt(gl.canvas.width * gl.canvas.width + gl.canvas.height * gl.canvas.height) * 0.5;\n//     var angle = now;\n//     var x = Math.cos(angle) * radius;\n//     var y = Math.sin(angle) * radius;\n//     var centerX = gl.canvas.width  / 2;\n//     var centerY = gl.canvas.height / 2;\n//     setGeometry(gl, centerX + x, centerY + y, centerX - x, centerY - y);\n\n//     // Compute the matrices\n//     var projectionMatrix = m3.projection(gl.canvas.width, gl.canvas.height);\n\n//     // Set the matrix.\n//     gl.uniformMatrix3fv(matrixLocation, false, projectionMatrix);\n\n//     // Draw in red\n//     gl.uniform4fv(colorLocation, [1, 0, 0, 1]);\n\n//     // Draw the geometry.\n//     var primitiveType = gl.LINES;\n//     var offset = 0;\n//     var count = 2;\n//     gl.drawArrays(primitiveType, offset, count);\n\n//     requestAnimationFrame(drawScene);\n//   }\n// }\n\n// // Fill the buffer with a line\n// function setGeometry(gl, x1, y1, x2, y2) {\n//   gl.bufferData(\n//       gl.ARRAY_BUFFER,\n//       new Float32Array([\n//           x1, y1,\n//           x2, y2]),\n//       gl.STATIC_DRAW);\n// }\n\n// main();\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/*\n * Copyright 2021 GFXFundamentals.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of GFXFundamentals. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function(root, factory) {  // eslint-disable-line\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function() {\n      return factory.call(root);\n    });\n  } else {\n    // Browser globals\n    root.webglUtils = factory.call(root);\n  }\n}(this, function() {\n  'use strict';\n\n  const topWindow = this;\n\n  /** @module webgl-utils */\n\n  function isInIFrame(w) {\n    w = w || topWindow;\n    return w !== w.top;\n  }\n\n  if (!isInIFrame()) {\n    console.log(\"%c%s\", 'color:blue;font-weight:bold;', 'for more about webgl-utils.js see:');  // eslint-disable-line\n    console.log(\"%c%s\", 'color:blue;font-weight:bold;', 'https://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html');  // eslint-disable-line\n  }\n\n  /**\n   * Wrapped logging function.\n   * @param {string} msg The message to log.\n   */\n  function error(msg) {\n    if (topWindow.console) {\n      if (topWindow.console.error) {\n        topWindow.console.error(msg);\n      } else if (topWindow.console.log) {\n        topWindow.console.log(msg);\n      }\n    }\n  }\n\n\n  /**\n   * Error Callback\n   * @callback ErrorCallback\n   * @param {string} msg error message.\n   * @memberOf module:webgl-utils\n   */\n\n\n  /**\n   * Loads a shader.\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n   * @param {string} shaderSource The shader source.\n   * @param {number} shaderType The type of shader.\n   * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\n   * @return {WebGLShader} The created shader.\n   */\n  function loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n    const errFn = opt_errorCallback || error;\n    // Create the shader object\n    const shader = gl.createShader(shaderType);\n\n    // Load the shader source\n    gl.shaderSource(shader, shaderSource);\n\n    // Compile the shader\n    gl.compileShader(shader);\n\n    // Check the compile status\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      // Something went wrong during compilation; get the error\n      const lastError = gl.getShaderInfoLog(shader);\n      errFn('*** Error compiling shader \\'' + shader + '\\':' + lastError + `\\n` + shaderSource.split('\\n').map((l,i) => `${i + 1}: ${l}`).join('\\n'));\n      gl.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  }\n\n  /**\n   * Creates a program, attaches shaders, binds attrib locations, links the\n   * program and calls useProgram.\n   * @param {WebGLShader[]} shaders The shaders to attach\n   * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n   * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n   * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n   *        on error. If you want something else pass an callback. It's passed an error message.\n   * @memberOf module:webgl-utils\n   */\n  function createProgram(\n      gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n    const errFn = opt_errorCallback || error;\n    const program = gl.createProgram();\n    shaders.forEach(function(shader) {\n      gl.attachShader(program, shader);\n    });\n    if (opt_attribs) {\n      opt_attribs.forEach(function(attrib, ndx) {\n        gl.bindAttribLocation(\n            program,\n            opt_locations ? opt_locations[ndx] : ndx,\n            attrib);\n      });\n    }\n    gl.linkProgram(program);\n\n    // Check the link status\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n        // something went wrong with the link\n        const lastError = gl.getProgramInfoLog(program);\n        errFn('Error in program linking:' + lastError);\n\n        gl.deleteProgram(program);\n        return null;\n    }\n    return program;\n  }\n\n  /**\n   * Loads a shader from a script tag.\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n   * @param {string} scriptId The id of the script tag.\n   * @param {number} opt_shaderType The type of shader. If not passed in it will\n   *     be derived from the type of the script tag.\n   * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\n   * @return {WebGLShader} The created shader.\n   */\n  function createShaderFromScript(\n      gl, scriptId, opt_shaderType, opt_errorCallback) {\n    let shaderSource = '';\n    let shaderType;\n    const shaderScript = document.getElementById(scriptId);\n    if (!shaderScript) {\n      throw ('*** Error: unknown script element' + scriptId);\n    }\n    shaderSource = shaderScript.text;\n\n    if (!opt_shaderType) {\n      if (shaderScript.type === 'x-shader/x-vertex') {\n        shaderType = gl.VERTEX_SHADER;\n      } else if (shaderScript.type === 'x-shader/x-fragment') {\n        shaderType = gl.FRAGMENT_SHADER;\n      } else if (shaderType !== gl.VERTEX_SHADER && shaderType !== gl.FRAGMENT_SHADER) {\n        throw ('*** Error: unknown shader type');\n      }\n    }\n\n    return loadShader(\n        gl, shaderSource, opt_shaderType ? opt_shaderType : shaderType,\n        opt_errorCallback);\n  }\n\n  const defaultShaderType = [\n    'VERTEX_SHADER',\n    'FRAGMENT_SHADER',\n  ];\n\n  /**\n   * Creates a program from 2 script tags.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {string[]} shaderScriptIds Array of ids of the script\n   *        tags for the shaders. The first is assumed to be the\n   *        vertex shader, the second the fragment shader.\n   * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n   * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n   * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n   *        on error. If you want something else pass an callback. It's passed an error message.\n   * @return {WebGLProgram} The created program.\n   * @memberOf module:webgl-utils\n   */\n  function createProgramFromScripts(\n      gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n    const shaders = [];\n    for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\n      shaders.push(createShaderFromScript(\n          gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], opt_errorCallback));\n    }\n    return createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback);\n  }\n\n  /**\n   * Creates a program from 2 sources.\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {string[]} shaderSourcess Array of sources for the\n   *        shaders. The first is assumed to be the vertex shader,\n   *        the second the fragment shader.\n   * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n   * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n   * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n   *        on error. If you want something else pass an callback. It's passed an error message.\n   * @return {WebGLProgram} The created program.\n   * @memberOf module:webgl-utils\n   */\n  function createProgramFromSources(\n      gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n    const shaders = [];\n    for (let ii = 0; ii < shaderSources.length; ++ii) {\n      shaders.push(loadShader(\n          gl, shaderSources[ii], gl[defaultShaderType[ii]], opt_errorCallback));\n    }\n    return createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback);\n  }\n\n  /**\n   * Returns the corresponding bind point for a given sampler type\n   */\n  function getBindPointForSamplerType(gl, type) {\n    if (type === gl.SAMPLER_2D)   return gl.TEXTURE_2D;        // eslint-disable-line\n    if (type === gl.SAMPLER_CUBE) return gl.TEXTURE_CUBE_MAP;  // eslint-disable-line\n    return undefined;\n  }\n\n  /**\n   * @typedef {Object.<string, function>} Setters\n   */\n\n  /**\n   * Creates setter functions for all uniforms of a shader\n   * program.\n   *\n   * @see {@link module:webgl-utils.setUniforms}\n   *\n   * @param {WebGLProgram} program the program to create setters for.\n   * @returns {Object.<string, function>} an object with a setter by name for each uniform\n   * @memberOf module:webgl-utils\n   */\n  function createUniformSetters(gl, program) {\n    let textureUnit = 0;\n\n    /**\n     * Creates a setter for a uniform of the given program with it's\n     * location embedded in the setter.\n     * @param {WebGLProgram} program\n     * @param {WebGLUniformInfo} uniformInfo\n     * @returns {function} the created setter.\n     */\n    function createUniformSetter(program, uniformInfo) {\n      const location = gl.getUniformLocation(program, uniformInfo.name);\n      const type = uniformInfo.type;\n      // Check if this uniform is an array\n      const isArray = (uniformInfo.size > 1 && uniformInfo.name.substr(-3) === '[0]');\n      if (type === gl.FLOAT && isArray) {\n        return function(v) {\n          gl.uniform1fv(location, v);\n        };\n      }\n      if (type === gl.FLOAT) {\n        return function(v) {\n          gl.uniform1f(location, v);\n        };\n      }\n      if (type === gl.FLOAT_VEC2) {\n        return function(v) {\n          gl.uniform2fv(location, v);\n        };\n      }\n      if (type === gl.FLOAT_VEC3) {\n        return function(v) {\n          gl.uniform3fv(location, v);\n        };\n      }\n      if (type === gl.FLOAT_VEC4) {\n        return function(v) {\n          gl.uniform4fv(location, v);\n        };\n      }\n      if (type === gl.INT && isArray) {\n        return function(v) {\n          gl.uniform1iv(location, v);\n        };\n      }\n      if (type === gl.INT) {\n        return function(v) {\n          gl.uniform1i(location, v);\n        };\n      }\n      if (type === gl.INT_VEC2) {\n        return function(v) {\n          gl.uniform2iv(location, v);\n        };\n      }\n      if (type === gl.INT_VEC3) {\n        return function(v) {\n          gl.uniform3iv(location, v);\n        };\n      }\n      if (type === gl.INT_VEC4) {\n        return function(v) {\n          gl.uniform4iv(location, v);\n        };\n      }\n      if (type === gl.BOOL) {\n        return function(v) {\n          gl.uniform1iv(location, v);\n        };\n      }\n      if (type === gl.BOOL_VEC2) {\n        return function(v) {\n          gl.uniform2iv(location, v);\n        };\n      }\n      if (type === gl.BOOL_VEC3) {\n        return function(v) {\n          gl.uniform3iv(location, v);\n        };\n      }\n      if (type === gl.BOOL_VEC4) {\n        return function(v) {\n          gl.uniform4iv(location, v);\n        };\n      }\n      if (type === gl.FLOAT_MAT2) {\n        return function(v) {\n          gl.uniformMatrix2fv(location, false, v);\n        };\n      }\n      if (type === gl.FLOAT_MAT3) {\n        return function(v) {\n          gl.uniformMatrix3fv(location, false, v);\n        };\n      }\n      if (type === gl.FLOAT_MAT4) {\n        return function(v) {\n          gl.uniformMatrix4fv(location, false, v);\n        };\n      }\n      if ((type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) && isArray) {\n        const units = [];\n        for (let ii = 0; ii < info.size; ++ii) {\n          units.push(textureUnit++);\n        }\n        return function(bindPoint, units) {\n          return function(textures) {\n            gl.uniform1iv(location, units);\n            textures.forEach(function(texture, index) {\n              gl.activeTexture(gl.TEXTURE0 + units[index]);\n              gl.bindTexture(bindPoint, texture);\n            });\n          };\n        }(getBindPointForSamplerType(gl, type), units);\n      }\n      if (type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) {\n        return function(bindPoint, unit) {\n          return function(texture) {\n            gl.uniform1i(location, unit);\n            gl.activeTexture(gl.TEXTURE0 + unit);\n            gl.bindTexture(bindPoint, texture);\n          };\n        }(getBindPointForSamplerType(gl, type), textureUnit++);\n      }\n      throw ('unknown type: 0x' + type.toString(16)); // we should never get here.\n    }\n\n    const uniformSetters = { };\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n    for (let ii = 0; ii < numUniforms; ++ii) {\n      const uniformInfo = gl.getActiveUniform(program, ii);\n      if (!uniformInfo) {\n        break;\n      }\n      let name = uniformInfo.name;\n      // remove the array suffix.\n      if (name.substr(-3) === '[0]') {\n        name = name.substr(0, name.length - 3);\n      }\n      const setter = createUniformSetter(program, uniformInfo);\n      uniformSetters[name] = setter;\n    }\n    return uniformSetters;\n  }\n\n  /**\n   * Set uniforms and binds related textures.\n   *\n   * Example:\n   *\n   *     let programInfo = createProgramInfo(\n   *         gl, [\"some-vs\", \"some-fs\"]);\n   *\n   *     let tex1 = gl.createTexture();\n   *     let tex2 = gl.createTexture();\n   *\n   *     ... assume we setup the textures with data ...\n   *\n   *     let uniforms = {\n   *       u_someSampler: tex1,\n   *       u_someOtherSampler: tex2,\n   *       u_someColor: [1,0,0,1],\n   *       u_somePosition: [0,1,1],\n   *       u_someMatrix: [\n   *         1,0,0,0,\n   *         0,1,0,0,\n   *         0,0,1,0,\n   *         0,0,0,0,\n   *       ],\n   *     };\n   *\n   *     gl.useProgram(program);\n   *\n   * This will automatically bind the textures AND set the\n   * uniforms.\n   *\n   *     setUniforms(programInfo.uniformSetters, uniforms);\n   *\n   * For the example above it is equivalent to\n   *\n   *     let texUnit = 0;\n   *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n   *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n   *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n   *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n   *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n   *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n   *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n   *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n   *     gl.uniformMatrix4fv(u_someMatrix, false, [\n   *         1,0,0,0,\n   *         0,1,0,0,\n   *         0,0,1,0,\n   *         0,0,0,0,\n   *       ]);\n   *\n   * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n   *\n   *     let uniforms = {\n   *       u_someSampler: tex1,\n   *       u_someOtherSampler: tex2,\n   *     };\n   *\n   *     let moreUniforms {\n   *       u_someColor: [1,0,0,1],\n   *       u_somePosition: [0,1,1],\n   *       u_someMatrix: [\n   *         1,0,0,0,\n   *         0,1,0,0,\n   *         0,0,1,0,\n   *         0,0,0,0,\n   *       ],\n   *     };\n   *\n   *     setUniforms(programInfo.uniformSetters, uniforms);\n   *     setUniforms(programInfo.uniformSetters, moreUniforms);\n   *\n   * @param {Object.<string, function>|module:webgl-utils.ProgramInfo} setters the setters returned from\n   *        `createUniformSetters` or a ProgramInfo from {@link module:webgl-utils.createProgramInfo}.\n   * @param {Object.<string, value>} an object with values for the\n   *        uniforms.\n   * @memberOf module:webgl-utils\n   */\n  function setUniforms(setters, ...values) {\n    setters = setters.uniformSetters || setters;\n    for (const uniforms of values) {\n      Object.keys(uniforms).forEach(function(name) {\n        const setter = setters[name];\n        if (setter) {\n          setter(uniforms[name]);\n        }\n      });\n    }\n  }\n\n  /**\n   * Creates setter functions for all attributes of a shader\n   * program. You can pass this to {@link module:webgl-utils.setBuffersAndAttributes} to set all your buffers and attributes.\n   *\n   * @see {@link module:webgl-utils.setAttributes} for example\n   * @param {WebGLProgram} program the program to create setters for.\n   * @return {Object.<string, function>} an object with a setter for each attribute by name.\n   * @memberOf module:webgl-utils\n   */\n  function createAttributeSetters(gl, program) {\n    const attribSetters = {\n    };\n\n    function createAttribSetter(index) {\n      return function(b) {\n          if (b.value) {\n            gl.disableVertexAttribArray(index);\n            switch (b.value.length) {\n              case 4:\n                gl.vertexAttrib4fv(index, b.value);\n                break;\n              case 3:\n                gl.vertexAttrib3fv(index, b.value);\n                break;\n              case 2:\n                gl.vertexAttrib2fv(index, b.value);\n                break;\n              case 1:\n                gl.vertexAttrib1fv(index, b.value);\n                break;\n              default:\n                throw new Error('the length of a float constant value must be between 1 and 4!');\n            }\n          } else {\n            gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n            gl.enableVertexAttribArray(index);\n            gl.vertexAttribPointer(\n                index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n          }\n        };\n    }\n\n    const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let ii = 0; ii < numAttribs; ++ii) {\n      const attribInfo = gl.getActiveAttrib(program, ii);\n      if (!attribInfo) {\n        break;\n      }\n      const index = gl.getAttribLocation(program, attribInfo.name);\n      attribSetters[attribInfo.name] = createAttribSetter(index);\n    }\n\n    return attribSetters;\n  }\n\n  /**\n   * Sets attributes and binds buffers (deprecated... use {@link module:webgl-utils.setBuffersAndAttributes})\n   *\n   * Example:\n   *\n   *     let program = createProgramFromScripts(\n   *         gl, [\"some-vs\", \"some-fs\"]);\n   *\n   *     let attribSetters = createAttributeSetters(program);\n   *\n   *     let positionBuffer = gl.createBuffer();\n   *     let texcoordBuffer = gl.createBuffer();\n   *\n   *     let attribs = {\n   *       a_position: {buffer: positionBuffer, numComponents: 3},\n   *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n   *     };\n   *\n   *     gl.useProgram(program);\n   *\n   * This will automatically bind the buffers AND set the\n   * attributes.\n   *\n   *     setAttributes(attribSetters, attribs);\n   *\n   * Properties of attribs. For each attrib you can add\n   * properties:\n   *\n   * *   type: the type of data in the buffer. Default = gl.FLOAT\n   * *   normalize: whether or not to normalize the data. Default = false\n   * *   stride: the stride. Default = 0\n   * *   offset: offset into the buffer. Default = 0\n   *\n   * For example if you had 3 value float positions, 2 value\n   * float texcoord and 4 value uint8 colors you'd setup your\n   * attribs like this\n   *\n   *     let attribs = {\n   *       a_position: {buffer: positionBuffer, numComponents: 3},\n   *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n   *       a_color: {\n   *         buffer: colorBuffer,\n   *         numComponents: 4,\n   *         type: gl.UNSIGNED_BYTE,\n   *         normalize: true,\n   *       },\n   *     };\n   *\n   * @param {Object.<string, function>|model:webgl-utils.ProgramInfo} setters Attribute setters as returned from createAttributeSetters or a ProgramInfo as returned {@link module:webgl-utils.createProgramInfo}\n   * @param {Object.<string, module:webgl-utils.AttribInfo>} attribs AttribInfos mapped by attribute name.\n   * @memberOf module:webgl-utils\n   * @deprecated use {@link module:webgl-utils.setBuffersAndAttributes}\n   */\n  function setAttributes(setters, attribs) {\n    setters = setters.attribSetters || setters;\n    Object.keys(attribs).forEach(function(name) {\n      const setter = setters[name];\n      if (setter) {\n        setter(attribs[name]);\n      }\n    });\n  }\n\n  /**\n   * Creates a vertex array object and then sets the attributes\n   * on it\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n   * @param {Object.<string, module:webgl-utils.AttribInfo>} attribs AttribInfos mapped by attribute name.\n   * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n   */\n  function createVAOAndSetAttributes(gl, setters, attribs, indices) {\n    const vao = gl.createVertexArray();\n    gl.bindVertexArray(vao);\n    setAttributes(setters, attribs);\n    if (indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n    }\n    // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n    // like when creating buffers for other stuff will mess up this VAO's binding\n    gl.bindVertexArray(null);\n    return vao;\n  }\n\n  /**\n   * Creates a vertex array object and then sets the attributes\n   * on it\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {Object.<string, function>| module:webgl-utils.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n   * @param {module:webgl-utils:BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n   * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n   */\n  function createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n    return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n  }\n\n  /**\n   * @typedef {Object} ProgramInfo\n   * @property {WebGLProgram} program A shader program\n   * @property {Object<string, function>} uniformSetters: object of setters as returned from createUniformSetters,\n   * @property {Object<string, function>} attribSetters: object of setters as returned from createAttribSetters,\n   * @memberOf module:webgl-utils\n   */\n\n  /**\n   * Creates a ProgramInfo from 2 sources.\n   *\n   * A ProgramInfo contains\n   *\n   *     programInfo = {\n   *        program: WebGLProgram,\n   *        uniformSetters: object of setters as returned from createUniformSetters,\n   *        attribSetters: object of setters as returned from createAttribSetters,\n   *     }\n   *\n   * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n   *        to use.\n   * @param {string[]} shaderSourcess Array of sources for the\n   *        shaders or ids. The first is assumed to be the vertex shader,\n   *        the second the fragment shader.\n   * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n   * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n   * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n   *        on error. If you want something else pass an callback. It's passed an error message.\n   * @return {module:webgl-utils.ProgramInfo} The created program.\n   * @memberOf module:webgl-utils\n   */\n  function createProgramInfo(\n      gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n    shaderSources = shaderSources.map(function(source) {\n      const script = document.getElementById(source);\n      return script ? script.text : source;\n    });\n    const program = webglUtils.createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback);\n    if (!program) {\n      return null;\n    }\n    const uniformSetters = createUniformSetters(gl, program);\n    const attribSetters = createAttributeSetters(gl, program);\n    return {\n      program: program,\n      uniformSetters: uniformSetters,\n      attribSetters: attribSetters,\n    };\n  }\n\n  /**\n   * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n   *\n   * Example:\n   *\n   *     let programInfo = createProgramInfo(\n   *         gl, [\"some-vs\", \"some-fs\"]);\n   *\n   *     let arrays = {\n   *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n   *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n   *     };\n   *\n   *     let bufferInfo = createBufferInfoFromArrays(gl, arrays);\n   *\n   *     gl.useProgram(programInfo.program);\n   *\n   * This will automatically bind the buffers AND set the\n   * attributes.\n   *\n   *     setBuffersAndAttributes(programInfo.attribSetters, bufferInfo);\n   *\n   * For the example above it is equivilent to\n   *\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n   *     gl.enableVertexAttribArray(a_positionLocation);\n   *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n   *     gl.enableVertexAttribArray(a_texcoordLocation);\n   *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n   * @param {Object.<string, function>} setters Attribute setters as returned from `createAttributeSetters`\n   * @param {module:webgl-utils.BufferInfo} buffers a BufferInfo as returned from `createBufferInfoFromArrays`.\n   * @memberOf module:webgl-utils\n   */\n  function setBuffersAndAttributes(gl, setters, buffers) {\n    setAttributes(setters, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n\n  // Add your prefix here.\n  const browserPrefixes = [\n    '',\n    'MOZ_',\n    'OP_',\n    'WEBKIT_',\n  ];\n\n  /**\n   * Given an extension name like WEBGL_compressed_texture_s3tc\n   * returns the supported version extension, like\n   * WEBKIT_WEBGL_compressed_teture_s3tc\n   * @param {string} name Name of extension to look for\n   * @return {WebGLExtension} The extension or undefined if not\n   *     found.\n   * @memberOf module:webgl-utils\n   */\n  function getExtensionWithKnownPrefixes(gl, name) {\n    for (let ii = 0; ii < browserPrefixes.length; ++ii) {\n      const prefixedName = browserPrefixes[ii] + name;\n      const ext = gl.getExtension(prefixedName);\n      if (ext) {\n        return ext;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Resize a canvas to match the size its displayed.\n   * @param {HTMLCanvasElement} canvas The canvas to resize.\n   * @param {number} [multiplier] amount to multiply by.\n   *    Pass in window.devicePixelRatio for native pixels.\n   * @return {boolean} true if the canvas was resized.\n   * @memberOf module:webgl-utils\n   */\n  function resizeCanvasToDisplaySize(canvas, multiplier) {\n    multiplier = multiplier || 1;\n    const width  = canvas.clientWidth  * multiplier | 0;\n    const height = canvas.clientHeight * multiplier | 0;\n    if (canvas.width !== width ||  canvas.height !== height) {\n      canvas.width  = width;\n      canvas.height = height;\n      return true;\n    }\n    return false;\n  }\n\n  // Add `push` to a typed array. It just keeps a 'cursor'\n  // and allows use to `push` values into the array so we\n  // don't have to manually compute offsets\n  function augmentTypedArray(typedArray, numComponents) {\n    let cursor = 0;\n    typedArray.push = function() {\n      for (let ii = 0; ii < arguments.length; ++ii) {\n        const value = arguments[ii];\n        if (value instanceof Array || (value.buffer && value.buffer instanceof ArrayBuffer)) {\n          for (let jj = 0; jj < value.length; ++jj) {\n            typedArray[cursor++] = value[jj];\n          }\n        } else {\n          typedArray[cursor++] = value;\n        }\n      }\n    };\n    typedArray.reset = function(opt_index) {\n      cursor = opt_index || 0;\n    };\n    typedArray.numComponents = numComponents;\n    Object.defineProperty(typedArray, 'numElements', {\n      get: function() {\n        return this.length / this.numComponents | 0;\n      },\n    });\n    return typedArray;\n  }\n\n  /**\n   * creates a typed array with a `push` function attached\n   * so that you can easily *push* values.\n   *\n   * `push` can take multiple arguments. If an argument is an array each element\n   * of the array will be added to the typed array.\n   *\n   * Example:\n   *\n   *     let array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n   *     array.push(1, 2, 3);\n   *     array.push([4, 5, 6]);\n   *     // array now contains [1, 2, 3, 4, 5, 6]\n   *\n   * Also has `numComponents` and `numElements` properties.\n   *\n   * @param {number} numComponents number of components\n   * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n   * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n   * @return {ArrayBuffer} A typed array.\n   * @memberOf module:webgl-utils\n   */\n  function createAugmentedTypedArray(numComponents, numElements, opt_type) {\n    const Type = opt_type || Float32Array;\n    return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n  }\n\n  function createBufferFromTypedArray(gl, array, type, drawType) {\n    type = type || gl.ARRAY_BUFFER;\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(type, buffer);\n    gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n    return buffer;\n  }\n\n  function allButIndices(name) {\n    return name !== 'indices';\n  }\n\n  function createMapping(obj) {\n    const mapping = {};\n    Object.keys(obj).filter(allButIndices).forEach(function(key) {\n      mapping['a_' + key] = key;\n    });\n    return mapping;\n  }\n\n  function getGLTypeForTypedArray(gl, typedArray) {\n    if (typedArray instanceof Int8Array)    { return gl.BYTE; }            // eslint-disable-line\n    if (typedArray instanceof Uint8Array)   { return gl.UNSIGNED_BYTE; }   // eslint-disable-line\n    if (typedArray instanceof Int16Array)   { return gl.SHORT; }           // eslint-disable-line\n    if (typedArray instanceof Uint16Array)  { return gl.UNSIGNED_SHORT; }  // eslint-disable-line\n    if (typedArray instanceof Int32Array)   { return gl.INT; }             // eslint-disable-line\n    if (typedArray instanceof Uint32Array)  { return gl.UNSIGNED_INT; }    // eslint-disable-line\n    if (typedArray instanceof Float32Array) { return gl.FLOAT; }           // eslint-disable-line\n    throw 'unsupported typed array type';\n  }\n\n  // This is really just a guess. Though I can't really imagine using\n  // anything else? Maybe for some compression?\n  function getNormalizationForTypedArray(typedArray) {\n    if (typedArray instanceof Int8Array)    { return true; }  // eslint-disable-line\n    if (typedArray instanceof Uint8Array)   { return true; }  // eslint-disable-line\n    return false;\n  }\n\n  function isArrayBuffer(a) {\n    return a.buffer && a.buffer instanceof ArrayBuffer;\n  }\n\n  function guessNumComponentsFromName(name, length) {\n    let numComponents;\n    if (name.indexOf('coord') >= 0) {\n      numComponents = 2;\n    } else if (name.indexOf('color') >= 0) {\n      numComponents = 4;\n    } else {\n      numComponents = 3;  // position, normals, indices ...\n    }\n\n    if (length % numComponents > 0) {\n      throw 'can not guess numComponents. You should specify it.';\n    }\n\n    return numComponents;\n  }\n\n  function makeTypedArray(array, name) {\n    if (isArrayBuffer(array)) {\n      return array;\n    }\n\n    if (array.data && isArrayBuffer(array.data)) {\n      return array.data;\n    }\n\n    if (Array.isArray(array)) {\n      array = {\n        data: array,\n      };\n    }\n\n    if (!array.numComponents) {\n      array.numComponents = guessNumComponentsFromName(name, array.length);\n    }\n\n    let type = array.type;\n    if (!type) {\n      if (name === 'indices') {\n        type = Uint16Array;\n      }\n    }\n    const typedArray = createAugmentedTypedArray(array.numComponents, array.data.length / array.numComponents | 0, type);\n    typedArray.push(array.data);\n    return typedArray;\n  }\n\n  /**\n   * @typedef {Object} AttribInfo\n   * @property {number} [numComponents] the number of components for this attribute.\n   * @property {number} [size] the number of components for this attribute.\n   * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n   * @property {boolean} [normalized] whether or not to normalize the data. Default = false\n   * @property {number} [offset] offset into buffer in bytes. Default = 0\n   * @property {number} [stride] the stride in bytes per element. Default = 0\n   * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n   * @memberOf module:webgl-utils\n   */\n\n\n  /**\n   * Creates a set of attribute data and WebGLBuffers from set of arrays\n   *\n   * Given\n   *\n   *      let arrays = {\n   *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n   *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n   *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n   *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n   *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n   *      };\n   *\n   * returns something like\n   *\n   *      let attribs = {\n   *        a_position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n   *        a_texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n   *        a_normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n   *        a_color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n   *      };\n   *\n   * @param {WebGLRenderingContext} gl The webgl rendering context.\n   * @param {Object.<string, array|typedarray>} arrays The arrays\n   * @param {Object.<string, string>} [opt_mapping] mapping from attribute name to array name.\n   *     if not specified defaults to \"a_name\" -> \"name\".\n   * @return {Object.<string, module:webgl-utils.AttribInfo>} the attribs\n   * @memberOf module:webgl-utils\n   */\n  function createAttribsFromArrays(gl, arrays, opt_mapping) {\n    const mapping = opt_mapping || createMapping(arrays);\n    const attribs = {};\n    Object.keys(mapping).forEach(function(attribName) {\n      const bufferName = mapping[attribName];\n      const origArray = arrays[bufferName];\n      if (origArray.value) {\n        attribs[attribName] = {\n          value: origArray.value,\n        };\n      } else {\n        const array = makeTypedArray(origArray, bufferName);\n        attribs[attribName] = {\n          buffer:        createBufferFromTypedArray(gl, array),\n          numComponents: origArray.numComponents || array.numComponents || guessNumComponentsFromName(bufferName),\n          type:          getGLTypeForTypedArray(gl, array),\n          normalize:     getNormalizationForTypedArray(array),\n        };\n      }\n    });\n    return attribs;\n  }\n\n  function getArray(array) {\n    return array.length ? array : array.data;\n  }\n\n  const texcoordRE = /coord|texture/i;\n  const colorRE = /color|colour/i;\n\n  function guessNumComponentsFromName(name, length) {\n    let numComponents;\n    if (texcoordRE.test(name)) {\n      numComponents = 2;\n    } else if (colorRE.test(name)) {\n      numComponents = 4;\n    } else {\n      numComponents = 3;  // position, normals, indices ...\n    }\n\n    if (length % numComponents > 0) {\n      throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n    }\n\n    return numComponents;\n  }\n\n  function getNumComponents(array, arrayName) {\n    return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n  }\n\n  /**\n   * tries to get the number of elements from a set of arrays.\n   */\n  const positionKeys = ['position', 'positions', 'a_position'];\n  function getNumElementsFromNonIndexedArrays(arrays) {\n    let key;\n    for (const k of positionKeys) {\n      if (k in arrays) {\n        key = k;\n        break;\n      }\n    }\n    key = key || Object.keys(arrays)[0];\n    const array = arrays[key];\n    const length = getArray(array).length;\n    const numComponents = getNumComponents(array, key);\n    const numElements = length / numComponents;\n    if (length % numComponents > 0) {\n      throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n    }\n    return numElements;\n  }\n\n  /**\n   * @typedef {Object} BufferInfo\n   * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n   * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n   * @property {Object.<string, module:webgl-utils.AttribInfo>} attribs The attribs approriate to call `setAttributes`\n   * @memberOf module:webgl-utils\n   */\n\n\n  /**\n   * Creates a BufferInfo from an object of arrays.\n   *\n   * This can be passed to {@link module:webgl-utils.setBuffersAndAttributes} and to\n   * {@link module:webgl-utils:drawBufferInfo}.\n   *\n   * Given an object like\n   *\n   *     let arrays = {\n   *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n   *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n   *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n   *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n   *     };\n   *\n   *  Creates an BufferInfo like this\n   *\n   *     bufferInfo = {\n   *       numElements: 4,        // or whatever the number of elements is\n   *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n   *       attribs: {\n   *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n   *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n   *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n   *       },\n   *     };\n   *\n   *  The properties of arrays can be JavaScript arrays in which case the number of components\n   *  will be guessed.\n   *\n   *     let arrays = {\n   *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n   *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n   *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n   *        indices:  [0, 1, 2, 1, 2, 3],\n   *     };\n   *\n   *  They can also by TypedArrays\n   *\n   *     let arrays = {\n   *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n   *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n   *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n   *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n   *     };\n   *\n   *  Or augmentedTypedArrays\n   *\n   *     let positions = createAugmentedTypedArray(3, 4);\n   *     let texcoords = createAugmentedTypedArray(2, 4);\n   *     let normals   = createAugmentedTypedArray(3, 4);\n   *     let indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n   *\n   *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n   *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n   *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n   *     indices.push([0, 1, 2, 1, 2, 3]);\n   *\n   *     let arrays = {\n   *        position: positions,\n   *        texcoord: texcoords,\n   *        normal:   normals,\n   *        indices:  indices,\n   *     };\n   *\n   * For the last example it is equivalent to\n   *\n   *     let bufferInfo = {\n   *       attribs: {\n   *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n   *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n   *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n   *       },\n   *       indices: gl.createBuffer(),\n   *       numElements: 6,\n   *     };\n   *\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n   *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n   *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n   *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n   *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n   *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n   *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {Object.<string, array|object|typedarray>} arrays Your data\n   * @param {Object.<string, string>} [opt_mapping] an optional mapping of attribute to array name.\n   *    If not passed in it's assumed the array names will be mapped to an attribute\n   *    of the same name with \"a_\" prefixed to it. An other words.\n   *\n   *        let arrays = {\n   *           position: ...,\n   *           texcoord: ...,\n   *           normal:   ...,\n   *           indices:  ...,\n   *        };\n   *\n   *        bufferInfo = createBufferInfoFromArrays(gl, arrays);\n   *\n   *    Is the same as\n   *\n   *        let arrays = {\n   *           position: ...,\n   *           texcoord: ...,\n   *           normal:   ...,\n   *           indices:  ...,\n   *        };\n   *\n   *        let mapping = {\n   *          a_position: \"position\",\n   *          a_texcoord: \"texcoord\",\n   *          a_normal:   \"normal\",\n   *        };\n   *\n   *        bufferInfo = createBufferInfoFromArrays(gl, arrays, mapping);\n   *\n   * @return {module:webgl-utils.BufferInfo} A BufferInfo\n   * @memberOf module:webgl-utils\n   */\n  function createBufferInfoFromArrays(gl, arrays, opt_mapping) {\n    const bufferInfo = {\n      attribs: createAttribsFromArrays(gl, arrays, opt_mapping),\n    };\n    let indices = arrays.indices;\n    if (indices) {\n      indices = makeTypedArray(indices, 'indices');\n      bufferInfo.indices = createBufferFromTypedArray(gl, indices, gl.ELEMENT_ARRAY_BUFFER);\n      bufferInfo.numElements = indices.length;\n    } else {\n      bufferInfo.numElements = getNumElementsFromNonIndexedArrays(arrays);\n    }\n\n    return bufferInfo;\n  }\n\n  /**\n   * Creates buffers from typed arrays\n   *\n   * Given something like this\n   *\n   *     let arrays = {\n   *        positions: [1, 2, 3],\n   *        normals: [0, 0, 1],\n   *     }\n   *\n   * returns something like\n   *\n   *     buffers = {\n   *       positions: WebGLBuffer,\n   *       normals: WebGLBuffer,\n   *     }\n   *\n   * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n   * @param {Object<string, array|typedarray>} arrays\n   * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n   * @memberOf module:webgl-utils\n   */\n  function createBuffersFromArrays(gl, arrays) {\n    const buffers = { };\n    Object.keys(arrays).forEach(function(key) {\n      const type = key === 'indices' ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n      const array = makeTypedArray(arrays[key], name);\n      buffers[key] = createBufferFromTypedArray(gl, array, type);\n    });\n\n    // hrm\n    if (arrays.indices) {\n      buffers.numElements = arrays.indices.length;\n    } else if (arrays.position) {\n      buffers.numElements = arrays.position.length / 3;\n    }\n\n    return buffers;\n  }\n\n  /**\n   * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n   *\n   * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n   * but calling this means if you switch from indexed data to non-indexed\n   * data you don't have to remember to update your draw call.\n   *\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {module:webgl-utils.BufferInfo} bufferInfo as returned from createBufferInfoFromArrays\n   * @param {enum} [primitiveType] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...)\n   * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n   * @param {number} [offset] An optional offset. Defaults to 0.\n   * @memberOf module:webgl-utils\n   */\n  function drawBufferInfo(gl, bufferInfo, primitiveType, count, offset) {\n    const indices = bufferInfo.indices;\n    primitiveType = primitiveType === undefined ? gl.TRIANGLES : primitiveType;\n    const numElements = count === undefined ? bufferInfo.numElements : count;\n    offset = offset === undefined ? 0 : offset;\n    if (indices) {\n      gl.drawElements(primitiveType, numElements, gl.UNSIGNED_SHORT, offset);\n    } else {\n      gl.drawArrays(primitiveType, offset, numElements);\n    }\n  }\n\n  /**\n   * @typedef {Object} DrawObject\n   * @property {module:webgl-utils.ProgramInfo} programInfo A ProgramInfo as returned from createProgramInfo\n   * @property {module:webgl-utils.BufferInfo} bufferInfo A BufferInfo as returned from createBufferInfoFromArrays\n   * @property {Object<string, ?>} uniforms The values for the uniforms\n   * @memberOf module:webgl-utils\n   */\n\n  /**\n   * Draws a list of objects\n   * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n   * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n   * @memberOf module:webgl-utils\n   */\n  function drawObjectList(gl, objectsToDraw) {\n    let lastUsedProgramInfo = null;\n    let lastUsedBufferInfo = null;\n\n    objectsToDraw.forEach(function(object) {\n      const programInfo = object.programInfo;\n      const bufferInfo = object.bufferInfo;\n      let bindBuffers = false;\n\n      if (programInfo !== lastUsedProgramInfo) {\n        lastUsedProgramInfo = programInfo;\n        gl.useProgram(programInfo.program);\n        bindBuffers = true;\n      }\n\n      // Setup all the needed attributes.\n      if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n        lastUsedBufferInfo = bufferInfo;\n        setBuffersAndAttributes(gl, programInfo.attribSetters, bufferInfo);\n      }\n\n      // Set the uniforms.\n      setUniforms(programInfo.uniformSetters, object.uniforms);\n\n      // Draw\n      drawBufferInfo(gl, bufferInfo);\n    });\n  }\n\n  function glEnumToString(gl, v) {\n    const results = [];\n    for (const key in gl) {\n      if (gl[key] === v) {\n        results.push(key);\n      }\n    }\n    return results.length\n        ? results.join(' | ')\n        : `0x${v.toString(16)}`;\n  }\n\n  const isIE = /*@cc_on!@*/false || !!document.documentMode;\n  // Edge 20+\n  const isEdge = !isIE && !!window.StyleMedia;\n  if (isEdge) {\n    // Hack for Edge. Edge's WebGL implmentation is crap still and so they\n    // only respond to \"experimental-webgl\". I don't want to clutter the\n    // examples with that so his hack works around it\n    HTMLCanvasElement.prototype.getContext = function(origFn) {\n      return function() {\n        let args = arguments;\n        const type = args[0];\n        if (type === 'webgl') {\n          args = [].slice.call(arguments);\n          args[0] = 'experimental-webgl';\n        }\n        return origFn.apply(this, args);\n      };\n    }(HTMLCanvasElement.prototype.getContext);\n  }\n\n  return {\n    createAugmentedTypedArray: createAugmentedTypedArray,\n    createAttribsFromArrays: createAttribsFromArrays,\n    createBuffersFromArrays: createBuffersFromArrays,\n    createBufferInfoFromArrays: createBufferInfoFromArrays,\n    createAttributeSetters: createAttributeSetters,\n    createProgram: createProgram,\n    createProgramFromScripts: createProgramFromScripts,\n    createProgramFromSources: createProgramFromSources,\n    createProgramInfo: createProgramInfo,\n    createUniformSetters: createUniformSetters,\n    createVAOAndSetAttributes: createVAOAndSetAttributes,\n    createVAOFromBufferInfo: createVAOFromBufferInfo,\n    drawBufferInfo: drawBufferInfo,\n    drawObjectList: drawObjectList,\n    glEnumToString: glEnumToString,\n    getExtensionWithKnownPrefixes: getExtensionWithKnownPrefixes,\n    resizeCanvasToDisplaySize: resizeCanvasToDisplaySize,\n    setAttributes: setAttributes,\n    setBuffersAndAttributes: setBuffersAndAttributes,\n    setUniforms: setUniforms,\n  };\n\n}));\n"],"names":[],"version":3,"file":"index.e93d55a9.js.map","sourceRoot":"/__parcel_source_root/"}